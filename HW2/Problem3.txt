Explain step-by-step how and what the code snippet below does and give
the values of the variables after each update. For the integer variables, show the two’s
complement internal representations after each step. Make sure that your explanation is
detailed. On line 8, use the numeric part of your own AUA ID.
        
int a = 101 , b = -77 , c;
char d = 'e';
boolean e = (a == d); // true
boolean f = (d - 3 == 'a'); // false, since d-3 is 98 and 98 != 'a' because 'a' is 97
c = --a; // c = 100 (a - 1)
boolean g = (a > b && a == b); // a number cannot be equal and bigger at the same time so both sides are false and the bolean g is false
a = ~b + 1; // b = 76, a = 77
short h = (short) 5402752L; // after casting the number becomes 28800
System.out.println("a␣=␣" + a); // prints 77 0000000001001101
System.out.println("b␣=␣" + b); // prints -77 1111111110110011
System.out.println("c␣=␣" + c); // prints 100 0000000001100100
System.out.println("d␣=␣" + d); // prints e
System.out.println("e␣=␣" + e); // prints true
System.out.println("f␣=␣" + f); // prints false
System.out.println("g␣=␣" + g); // prints false
System.out.println("h␣=␣" + h); // prints 28800 0111000010000000
a = a ^ b ; // 77^-77 = -2, a = -2, 0000000001001101 XOR 1111111110110011 = 1111111111111110
b = a ^ b ; // -2^-77 = 77, b = 77
a = a ^ b ; // -2^77 = -77, a = -77
System.out.println("a␣=␣" + a); // -77
System.out.println("b␣=␣" + b); // 77
e = (c & (c - 1)) == 0; // e = false, since 100 - 1 = 99, 0000000001100100 & 0000000001100011 != 0
System.out.println("e␣=␣" + e); // prints false
g = a % (a & (-a)) != 0; // false, since the result is 0
System.out.println("g␣=␣" + g); // print false
a = (1 << 3) | 1; // after shifting the value is 8, after bitwise OR it becomes 9
a <<= 6; // after left shift the value is 576
b = a & (-a); // 576 and -576 is 64 = b
g = a % b == 0; // there is no remainder, therefore true
System.out.println ("a␣=␣" + a); // prints 576 0000001001000000
System.out.println ("b␣=␣" + b); // prints 64 0000000001000000
System.out.println ("g␣=␣" + g); // prints true